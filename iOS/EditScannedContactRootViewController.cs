// This file has been autogenerated from a class added in the UI designer.

using System;
using BoaBeeLogic;
using BoaBeePCL;
using CoreGraphics;
using Foundation;
using UIKit;

namespace BoaBee.iOS
{
	public partial class EditScannedContactRootViewController : UIViewController
	{
        public string message;
        public DBlocalContact contact;

        private EditScannedContactTableViewController editContactTableViewController;

        private NSObject kbWillAppearNoificationToken;
        private NSObject kbWillDisappearNoificationToken;

        public delegate void commitEditDelegate(DBlocalContact c);
        public event commitEditDelegate onCommitEdit;

        public EditScannedContactRootViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            this.editContactTableViewController = (EditScannedContactTableViewController)this.ChildViewControllers[0];
            this.editContactTableViewController.setContact(this.contact);
            this.editContactTableViewController.setMessage(this.message);
        }

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);

//          this.kbFrameChangeNoificationToken = UIKeyboard.Notifications.ObserveWillChangeFrame(kbFrameChangeCallback);
            this.kbWillAppearNoificationToken = UIKeyboard.Notifications.ObserveWillShow(kbWillAppearCallback);
            this.kbWillDisappearNoificationToken = UIKeyboard.Notifications.ObserveWillHide(kbWillDisappearCallback);
        }

        public override void ViewWillDisappear(bool animated)
        {
            base.ViewWillDisappear(animated);

//          if (this.kbFrameChangeNoificationToken != null)
//          {
//              this.kbFrameChangeNoificationToken.Dispose();
//              this.kbFrameChangeNoificationToken = null;
//          }

            if (this.kbWillAppearNoificationToken != null)
            {
                this.kbWillAppearNoificationToken.Dispose();
                this.kbWillAppearNoificationToken = null;
            }

            if (this.kbWillDisappearNoificationToken != null)
            {
                this.kbWillDisappearNoificationToken.Dispose();
                this.kbWillDisappearNoificationToken = null;
            }
        }

        private void kbFrameChangeCallback(object sender, UIKeyboardEventArgs args)
        {
            CGRect beginFrame = args.FrameBegin;
            CGRect endFrame = args.FrameEnd;

            UIView.Animate(args.AnimationDuration,
                () =>
                {
                    this.bottomButtonConstraint.Constant += (beginFrame.Y - endFrame.Y);
                    this.View.LayoutIfNeeded();
                });
        }

        private void kbWillAppearCallback(object sender, UIKeyboardEventArgs args)
        {
            CGRect endFrame = args.FrameEnd;

            Console.Error.WriteLine("kbWillAppear end frame {0}", endFrame.ToString());
            UIView.Animate(args.AnimationDuration,
                () =>
                {
                    this.bottomButtonConstraint.Constant = this.View.Frame.Height - endFrame.Y;
                    this.View.LayoutIfNeeded();
                });
        }

        private void kbWillDisappearCallback(object sender, UIKeyboardEventArgs args)
        {
            CGRect beginFrame = args.FrameBegin;

            Console.Error.WriteLine("kbWillDisappear begin frame {0}", beginFrame.ToString());

            UIView.Animate(args.AnimationDuration,
                () =>
                {
                    this.bottomButtonConstraint.Constant = 0;
                    this.View.LayoutIfNeeded();
                });
        }

        partial void crossButtonClick(UIButton sender)
        {
            UIAlertController alert = UIAlertController.Create("Warning", "Your current work will be lost.", UIAlertControllerStyle.Alert);
            alert.AddAction(UIAlertAction.Create("Cancel", UIAlertActionStyle.Default, null));
            alert.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Destructive, (obj) =>
            {
                OfflineLogic.ClearDataSelected(false);

                this.DismissViewController(true, null);
            }));

            Alert.PresentAlert(alert, true, null);
        }

        partial void nextButtonClick(UIButton sender)
        {
            var newContact = this.editContactTableViewController.getContact();

            if (this.onCommitEdit != null)
            {
                try
                {
                    this.onCommitEdit(newContact);
                }
                catch (Exception e)
                {
                    UIAlertController alertController = UIAlertController.Create("Error:", e.Message, UIAlertControllerStyle.Alert);
                    alertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

                    this.PresentViewController(alertController, true, null);
                }
            }
            //this.DismissViewController(true, null);
        }
	}
}
