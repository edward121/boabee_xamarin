// This file has been autogenerated from a class added in the UI designer.

using System;

using System.Collections.Generic;

using Foundation;
using UIKit;

namespace BoaBee.iOS
{
    public partial class BoaBeePageViewController : UIPageViewController, IUIPageViewControllerDataSource, IUIPageViewControllerDelegate
	{
        public List<UIViewController> pages = new List<UIViewController>();
        public int displayIndex;

		public BoaBeePageViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            this.Delegate = this;
            this.DataSource = this;

			BoaBeeBasePageContentViewController identifyPage = (BoaBeeBasePageContentViewController)this.Storyboard.InstantiateViewController("IdentifyViewController");
			BoaBeeBasePageContentViewController infoPage = (BoaBeeBasePageContentViewController)this.Storyboard.InstantiateViewController("InfoViewController");
			BoaBeeBasePageContentViewController sharePage = (BoaBeeBasePageContentViewController)this.Storyboard.InstantiateViewController("ShareViewController");

			identifyPage.pageIndex = (int)addProspectPagesEnum.IdentifyPage;
			infoPage.pageIndex = (int)addProspectPagesEnum.InfoPage;
			sharePage.pageIndex = (int)addProspectPagesEnum.SharePage;

            pages.Add(identifyPage);
            pages.Add(infoPage);
            pages.Add(sharePage);

            this.SetViewControllers(new UIViewController[] { identifyPage }, UIPageViewControllerNavigationDirection.Forward, false, null);
        }

        public new UIViewController GetPreviousViewController(UIPageViewController pageViewController, UIViewController referenceViewController)
        {
            int currentIndex = pages.IndexOf(referenceViewController);
            int previousIndex = currentIndex - 1;

            if (previousIndex < 0)
            {
                return null;
            }

            return pages[previousIndex];
        }

        public new UIViewController GetNextViewController(UIPageViewController pageViewController, UIViewController referenceViewController)
        {
            int currentIndex = pages.IndexOf(referenceViewController);
            int nextIndex = currentIndex + 1;

            if (nextIndex >= pages.Count)
            {
                return null;
            }

            return pages[nextIndex];
        }

        public void displayPage(int index)
        {
            if (index < 0 || index >= this.pages.Count)
            {
                throw new ArgumentOutOfRangeException();
            }

            bool? isForwardTransition = null;

            if (index > this.displayIndex)
            {
                isForwardTransition = true;
            }
            if (index < this.displayIndex)
            {
                isForwardTransition = false;
            }

            if (isForwardTransition != null)
            {
                var newDisplayPage = this.pages[index];
                if (isForwardTransition == true)
                {
                    this.displayIndex = index;
//                    this.SetViewControllers(new UIViewController[] { newDisplayPage }, UIPageViewControllerNavigationDirection.Forward, true, null);
					this.SetViewControllers(new UIViewController[] { newDisplayPage }, UIPageViewControllerNavigationDirection.Forward, true, (finished) => 
						{
							this.pageChanged();
						});
                }
                if (isForwardTransition == false)
                {
                    this.displayIndex = index;
					this.SetViewControllers(new UIViewController[] { newDisplayPage }, UIPageViewControllerNavigationDirection.Reverse, true, (finished) => 
						{
							this.pageChanged();
						});
                }
            }
        }

        [Export("pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:")]
        public void didFinishAnimating(UIPageViewController pageViewController, bool finished, UIViewController[] previousViewControllers, bool completed)
        {
			this.pageChanged();
        }

		private void pageChanged()
		{
			BoaBeeBasePageContentViewController displayingViewController = (BoaBeeBasePageContentViewController)this.ViewControllers[0];
			NSNumber displayIndex = NSNumber.FromInt32(displayingViewController.pageIndex);
			this.displayIndex = displayingViewController.pageIndex;

			NSDictionary userInfo = NSDictionary.FromObjectAndKey (displayIndex, (NSString)"newIndex");
			NSNotificationCenter.DefaultCenter.PostNotificationName ("DidShowNewPage", null, userInfo);
		}
	}
}
