// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;

namespace BoaBee.iOS
{
	public partial class AddProspectRootViewController : UIViewController
	{
		public AddProspectRootViewController (IntPtr handle) : base (handle)
		{
		}

        public BoaBeePageViewController pageViewController;
        private NSObject notificationToken = null;

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			foreach (UIButton button in selectionButtonsCollection) 
			{
				button.SetTitleColor(UIColor.Black, UIControlState.Selected);
			}

			try
			{
				foreach (UIButton button in arrowButtonsCollection)
				{
					button.SetBackgroundImage(UIImage.FromBundle("TabBarYellowArrow"), UIControlState.Selected);
				}
			}
			catch
			{
			}

            pageViewController = (BoaBeePageViewController)this.ChildViewControllers[0];
		}

        public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);

            notificationToken = NSNotificationCenter.DefaultCenter.AddObserver((NSString)"DidShowNewPage", DidShowNewPage);
        }

        public override void ViewWillDisappear(bool animated)
        {
            base.ViewWillDisappear(animated);
			if (notificationToken != null)
			{
				notificationToken.Dispose();
			}
        }

        private void DidShowNewPage(NSNotification notification)
        {
            NSNumber newIndexNumber = (NSNumber)notification.UserInfo.ObjectForKey((NSString)"newIndex");
			int newIndex = newIndexNumber.Int32Value;

			this.selectNewButton(newIndex);
        }

        private void selectNewButton (int tag)
        {
            foreach (UIButton button in selectionButtonsCollection) 
            {
                button.Selected = false;
                button.BackgroundColor = UIColor.FromRGB(0x1b, 0x1b, 0x1b);
            }

			try
			{
				foreach (UIButton button in arrowButtonsCollection)
				{
					button.Selected = false;
				}
			}
			catch
			{
			}

            selectionButtonsCollection[tag].Selected = true;
            selectionButtonsCollection[tag].BackgroundColor = UIColor.FromRGB(0xed,0xcd,0x00);

			try
			{
				arrowButtonsCollection[tag].Selected = true;
			}
			catch
			{
				return;
			}
        }

		partial void identifyButtonClick (UIButton sender)
		{
			pageViewController.displayPage((int)addProspectPagesEnum.IdentifyPage);
		}

		partial void infoButtonClick (UIButton sender)
		{
			pageViewController.displayPage((int)addProspectPagesEnum.InfoPage);
		}

		partial void shareButtonClick (UIButton sender)
		{
			pageViewController.displayPage((int)addProspectPagesEnum.SharePage);
		}
	}
}
