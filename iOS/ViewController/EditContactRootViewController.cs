// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using CoreGraphics;
using System.Text.RegularExpressions;
using BoaBeePCL;
using System.Linq;
using System.Collections.Generic;
using BoaBeeLogic;

namespace BoaBee.iOS
{
	public partial class EditContactRootViewController : UIViewController
	{
		private EditContactTableViewController editContactTableViewController;

//		private NSObject kbFrameChangeNoificationToken;
		private NSObject kbWillAppearNoificationToken;
		private NSObject kbWillDisappearNoificationToken;

        public delegate void cancelEditDelegate();
        public delegate void commitEditDelegate(DBlocalContact c);

        public event cancelEditDelegate onCancelEdit;
        public event commitEditDelegate onCommitEdit;

        public DBlocalContact contact;
        public bool isModal;

		public EditContactRootViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			this.editContactTableViewController = (EditContactTableViewController)this.ChildViewControllers[0];
		}

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);

            this.isModal = this.IsBeingPresented;
            if (this.isModal)
            {
                this.titleLabel.Text = "EDIT SCANNED CONTACT";
                this.updateButton.SetTitle("NEXT", UIControlState.Normal);
            }

            this.editContactTableViewController.setContact(this.contact);
		}

		public override void ViewDidAppear(bool animated)
		{
			base.ViewDidAppear(animated);

//			this.kbFrameChangeNoificationToken = UIKeyboard.Notifications.ObserveWillChangeFrame(kbFrameChangeCallback);
			this.kbWillAppearNoificationToken = UIKeyboard.Notifications.ObserveWillShow(kbWillAppearCallback);
			this.kbWillDisappearNoificationToken = UIKeyboard.Notifications.ObserveWillHide(kbWillDisappearCallback);
		}

		public override void ViewWillDisappear(bool animated)
		{
			base.ViewWillDisappear(animated);

//			if (this.kbFrameChangeNoificationToken != null)
//			{
//				this.kbFrameChangeNoificationToken.Dispose();
//				this.kbFrameChangeNoificationToken = null;
//			}

			if (this.kbWillAppearNoificationToken != null)
			{
				this.kbWillAppearNoificationToken.Dispose();
				this.kbWillAppearNoificationToken = null;
			}

			if (this.kbWillDisappearNoificationToken != null)
			{
				this.kbWillDisappearNoificationToken.Dispose();
				this.kbWillDisappearNoificationToken = null;
			}
		}

		private void kbFrameChangeCallback (object sender, UIKeyboardEventArgs args)
		{
			CGRect beginFrame = args.FrameBegin;
			CGRect endFrame = args.FrameEnd;

			UIView.Animate(args.AnimationDuration, 
				() =>
				{
					this.bottomButtonsConstraint.Constant += (beginFrame.Y - endFrame.Y);
					this.View.LayoutIfNeeded();
				});
		}

		private void kbWillAppearCallback(object sender, UIKeyboardEventArgs args)
		{
			CGRect endFrame = args.FrameEnd;

			Console.Error.WriteLine("kbWillAppear end frame {0}", endFrame.ToString());
			UIView.Animate(args.AnimationDuration,
				() =>
				{
					this.bottomButtonsConstraint.Constant = this.View.Frame.Height - endFrame.Y;
					this.View.LayoutIfNeeded();
				});
		}

		private void kbWillDisappearCallback(object sender, UIKeyboardEventArgs args)
		{
			CGRect beginFrame = args.FrameBegin;

			Console.Error.WriteLine("kbWillDisappear begin frame {0}", beginFrame.ToString());

			UIView.Animate(args.AnimationDuration,
				() =>
				{
					this.bottomButtonsConstraint.Constant = 0;
					this.View.LayoutIfNeeded();
				});
		}

		partial void cancelButtonClick (UIButton sender)
		{
            if (this.onCancelEdit != null)
            {
                this.onCancelEdit();
            }

            if (this.isModal)
            {
                this.DismissViewController(true, null);
            }
            else
            {
                this.NavigationController.PopViewController(true);
            }
		}

		partial void updateButtonClick (UIButton sender)
		{
            var newContact = this.editContactTableViewController.getContact();
            if (this.onCommitEdit != null)
            {
                try
                {
                    this.onCommitEdit(newContact);
                }
                catch (Exception e)
                {
                    UIAlertController alertController = UIAlertController.Create("Error:", e.Message, UIAlertControllerStyle.Alert);
                    alertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

                    this.PresentViewController(alertController, true, null);
                }
            }

            if (this.isModal)
            {
                this.DismissViewController(true, null);
            }
            else
            {
                this.NavigationController.PopViewController(true);
            }
		}
	}
}
